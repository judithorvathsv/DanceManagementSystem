/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/DanceClasses": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["DanceClass"][];
                        "application/json": components["schemas"]["DanceClass"][];
                        "text/json": components["schemas"]["DanceClass"][];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DanceClassRequest"];
                    "text/json": components["schemas"]["DanceClassRequest"];
                    "application/*+json": components["schemas"]["DanceClassRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/DanceClasses/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["DanceClass"];
                        "application/json": components["schemas"]["DanceClass"];
                        "text/json": components["schemas"]["DanceClass"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DanceClassRequest"];
                    "text/json": components["schemas"]["DanceClassRequest"];
                    "application/*+json": components["schemas"]["DanceClassRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["DanceClassDto"];
                        "application/json": components["schemas"]["DanceClassDto"];
                        "text/json": components["schemas"]["DanceClassDto"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/api/Lectures/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Lecture"];
                        "application/json": components["schemas"]["Lecture"];
                        "text/json": components["schemas"]["Lecture"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["LectureUpdateRequest"];
                    "text/json": components["schemas"]["LectureUpdateRequest"];
                    "application/*+json": components["schemas"]["LectureUpdateRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["LectureDto"];
                        "application/json": components["schemas"]["LectureDto"];
                        "text/json": components["schemas"]["LectureDto"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/api/Lectures": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["LectureRequest"];
                    "text/json": components["schemas"]["LectureRequest"];
                    "application/*+json": components["schemas"]["LectureRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["UserRequest"];
                    "text/json": components["schemas"]["UserRequest"];
                    "application/*+json": components["schemas"]["UserRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Users/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    email?: string;
                    password?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["LoginDto"];
                        "application/json": components["schemas"]["LoginDto"];
                        "text/json": components["schemas"]["LoginDto"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        DanceClass: {
            /** Format: uuid */
            id?: string;
            name: string | null;
            lectures?: components["schemas"]["Lecture"][] | null;
        };
        DanceClassDto: {
            /** Format: uuid */
            id?: string;
            name: string | null;
            lectures?: components["schemas"]["LectureDto"][] | null;
        };
        DanceClassRequest: {
            name: string | null;
        };
        Lecture: {
            /** Format: uuid */
            id?: string;
            name: string | null;
            description: string | null;
            preparationVideoLink?: string | null;
            lectionVideoLink?: string | null;
            /** Format: uuid */
            danceClassId: string;
            danceClass?: components["schemas"]["DanceClass"];
        };
        LectureDto: {
            /** Format: uuid */
            id?: string;
            name: string | null;
            description: string | null;
            preparationVideoLink?: string | null;
            lectionVideoLink?: string | null;
            /** Format: uuid */
            danceClassId: string;
        };
        LectureRequest: {
            name: string | null;
            description: string | null;
            preparationVideoLink?: string | null;
            lectionVideoLink?: string | null;
            /** Format: uuid */
            danceClassId: string;
        };
        LectureUpdateRequest: {
            name: string | null;
            description: string | null;
            preparationVideoLink?: string | null;
            lectionVideoLink?: string | null;
        };
        LoginDto: {
            role?: string | null;
        };
        UserRequest: {
            name: string | null;
            email: string | null;
            password: string | null;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
